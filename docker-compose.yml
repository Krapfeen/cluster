services:

    db:
        container_name: ${PROJECT_NAME}-mariadb
        image: mariadb:${DB_VERSION}
        command: [ mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb-file-format=Barracuda, --innodb-large-prefix=1, --innodb-file-per-table=1, --lower_case_table_names=1 ]
        ports:
            - ${DB_PORT}:3306
        environment:
            MYSQL_ROOT_PASSWORD: ${PASSWORD}
            MYSQL_USER: ${LOGIN}
            MYSQL_PASSWORD: ${PASSWORD}
            MARIADB_ROOT_PASSWORD: ${PASSWORD}
        volumes:
            - mariadb:/var/lib/mysql
        networks:
            local:

    cache:
        image: redis:${REDIS_VERSION}
        container_name: ${PROJECT_NAME}-redis
        command: [ redis-server, --maxmemory 128mb, --maxmemory-policy volatile-lru, --save "" ]
        ports:
            - ${REDIS_PORT}:6379
        volumes:
            - redis:/data
        networks:
            local:

    s3:
        container_name: ${PROJECT_NAME}-minio
        image: minio/minio:${S3_VERSION}
        environment:
            MINIO_ROOT_USER: ${LOGIN}
            MINIO_ROOT_PASSWORD: ${PASSWORD}
        ports:
            - ${S3_SERVER_PORT}:9000
            - ${S3_CLIENT_PORT}:9001
        volumes:
            - minio:/data
        command: server /data --console-address ":9001"
        networks:
            local:

    web:
        container_name: ${PROJECT_NAME}-nginx
        image: nginx:stable-alpine
        hostname: cluster.local
        domainname: cluster.local
        environment:
            NGINX_HOST: cluster.local
            NGINX_PORT: 80
        volumes:
            -   ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            -   ./.docker/clusters.conf:/etc/nginx/conf.d/clusters.conf:ro
        ports:
            -   "80:80"
        networks:
            local:
                aliases:
                      -   s3.cluster.local

volumes:
    mariadb:
    redis:
    minio:

networks:
    local:
        external: true
